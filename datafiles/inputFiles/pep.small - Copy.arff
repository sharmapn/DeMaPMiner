% 1. Title: OSSD Decision making structure
% 
% 2. Sources:
%      (a) training adata retrieved manually from Python repository
%      (b) www.python.org/archives
%      (c) Date: May, 2016
% 

@relation pep_test

% attribute Labelsclass {callforfeedback,bdflaskstogetfeedback,pepupdatedafterfeedback,pepupdatedafterfeedbackpositive,pepaccept,bdflaccept,bdfldelegateaccept,cobdfldelegateaccept,callforvote,thinkingofinformalvote,approvalforvote,summaryofvotes,callforpoll, consensus,noconsensus,callcomplimentaryvote,bdflpronouncementaccept,bdflpronouncementreject,pepsuperceded}
@attribute Labelsclass {callforfeedback,bdflaskstogetfeedback,pepupdatedafterfeedback,pepupdatedafterfeedbackpositive, bdfldecision,bdflaccept,bdfldecreereject, BDFL-guidance-vote,votingmethod,bdflgivesapprovalforvote,acceptancestalled,bdflofflineaccept,bdflwithdrawn,bdflrejected,bdflpronouncementpeprejected,bdflpronouncementaccept,bdflpronouncementrejected,bdflpronouncementconditionallyaccept,bdflprovisionallyaccepts,bdflpronouncement,bdflconsults,bdfldelegateaccept,cobdfldelegateaccept,authorrejectpep,askingforreview,feedbackincorporated,askforpronouncement,readyforpronouncement,pepaccept,pepaccepted,peprejected,previousversionrejected,pepreject,bdfl,bdflacceptfavourablefeedback,bdflsatisfiedaccept,pepgeneratednegative,pepdrawbacks,acceptedconsensus,whypepdelayed,pepaddressedconcerns,rejectedreason,rejectedreasonunanimity,rejectedreasonsyntax,peprejectedsuperceeded,rejectedreasonmeeting,rejectedreasonTooMuchOpposition,bdflrejectedpep,bdflrejectedpepTooMuchImpact,bdflrejectedpepTooMuchDisturbance,bdflrejectedpepStrongOpposition,bdflrejectedpepToKeepFocus,bdflrejecteddisagreement,bdflrejectpollresults,bdflrejectedpepToKeepFocus,bdflrejectedpepStrongOpposition,rejectedreason,bdflrejectedpep,peprejected,bdflrejectedpep,bdflpronouncement,bdflasks,pepfinished,pepstatusfinalandrejected,pepstatusfinal,callforvote,complimentaryvote,callforpoll,complimentaryvotereminder,thinkingofinformalvote,summaryofvotes,approvalforvote,voteheld,voteresultsinterpret,votingmethod,noopposition,consensus,noconsensus,farandwidediscussion,onsensusemerged,pepstalled,needsconsensus,twocamps,pepczar,bdflaskssomeonetobedelegate,revisions,pepsuperceded,pepacceptedafterdiscussion,peprevised,authoragreestomodify,offlineDiscussion,decisionoveriddenwithoutconsultation,important}
@attribute text String

@data

% discuses in other mailing lists
consensusbuiltinothermailinglist,'You'll notice that this draft is rather more developed than the average first-round PEP posting, because it's already been the rounds of all the various numerical package mailing lists to build consensus;no point in asking for the wrong thing.'
proposal,'I would like to purpose ..'
proposal,' This PEP proposes adding Roman numerals as a literal type .'

%call for feedback
callforfeedback,'Please read/comment/vote'
callforfeedback,'Comments?'
callforfeedback,'Your review and comments are invited for PEP 279:'
callforfeedback,'So, I guess as far as I'm concerned, this is ready to go. Feedback welcome:'
callforfeedback,'please review the new more final draft of the pep and send out suggestions and feedback .'
callforfeedback,'Please take a look and express your approval or disapproval (+1, +0, -0,-1, or whatever). '
callforfeedback,'Please send suggestions for editorial improvements to peps at python.org. '
callforfeedback,'Feedback (also about misrepresentation of alternatives I don't favor) is most welcome, either to me directly or as a followup to this post.'
bdflaskstogetfeedback,'please take this to c.l.py for feedback!'
%
pepupdatedafterfeedback,'After some very good python-dev feedback on my first version of PEP 471, I've updated the PEP to clarify a few things and added various "Rejected ideas" subsections.'
pepupdatedafterfeedback,'I believe I have incorporated into the PEP comments from people both here and on python-list. '
pepupdatedafterfeedbackpositive,'There have been comments in favour of the proposal, no objections to the proposal as a whole, and some questions and objections about specific details.'
pepupdatedafterfeedback,'I believe I have addressed these with changes to the PEP.'
peprewritten,'My rewritten version of PEP 414 is now up'

% BDFL 
bdfldecision,'So enumerate() it is.  '
bdflaccept,'This PEP was accepted by the BDFL on November 22.'
bdflaccept,'PEP 201 has been accepted by the BDFL'
bdflaccept,'This proposal has been accepted by the BDFL'
bdflaccept,'Both PEP 201 Lockstep Iteration and SF patch #101030 have been accepted by the BDFL.'
bdflaccept,'PEP 214 Extended print Statement has been accepted by the BDFL.'
bdflaccept,'Awesome, that's what I was hoping. Accepted! Congrats and thank you very much for writing the PEP and guiding the discussion.'
bdfldecreereject,'pep 224 is rejected by bdfl decree'
bdfldecreereject,'PEP 295 is rejected by BDFL decree.'
bdflaccept,'PEP 488 is now marked as accepted.'
bdflaccept,'Since this is done I now approve both PEP 345 and PEP 386 (which is not to say that small editorial changes to the text couldn't be made). '

BDFL-guidance-vote,'BDFL-guidance-vote.'

votingmethod,'Half of the 308 problem was because Guido wasn't willing to make a decision. The other half was the voting method used.'
bdflgivesapprovalforvote,'You have my approval to hold a vote.'

acceptancestalled,'I'm not entirely sure why acceptance got stalled the way it did. '

bdflofflineaccept,'Off-list he's told me he's happy with the PEP. I have to make some changes to typing.py to satisfy him;'
bdflofflineaccept,'Off-list he's promised he'll approve the PEP provisionally, and the window for beta 1 is closing'

bdflwithdrawn,'but pep 340 is already withdrawn by the bdfl .'
bdflrejected,'guido rejected the pep '
bdflrejected,'guido agreed , so the pep was rejected.'
bdflrejected,'guido agreed again , and this pep too was rejected'
bdflrejected,'+ + on 17 june 2005 , the bdfl concurred with it being obsolete and + hereby rejected the pep .'
bdflrejected,'was proposed , and the pep was rejected.'
bdflrejected,'many people , including guido , agreed , and the pep was rejected '
bdflpronouncementpeprejected,'+ bdfl pronouncement this pep is rejected .'
bdflpronouncementpeprejected,'pep 245 was rejected by bdfl pronouncement .'
bdflpronouncementpeprejected,'+ bdfl pronouncement + + this pep is rejected .'
bdflpronouncementaccept,'PEP 214 and 221 are accepted, as per recent BDFL pronouncements.'
bdflpronouncementrejected,'+ bdfl pronouncement + + this pep is rejected because the need for it has been largely + fulfilled by py2 .4 's sorted -LRB- -RRB- builtin function : + + >> > sorted -LRB- d.iteritems -LRB- -RRB- , key = itemgetter -LRB- 1 -RRB- , reverse = true -RRB- + -LSB- -LRB- ` b ' , 23 -RRB- , -LRB- 'd ' , 17 -RRB- , -LRB- ` c ' , 5 -RRB- , -LRB- ` a ' , 2 -RRB- , -LRB- ` e ' , 1 -RRB- -RSB- + + or for just the keys : + + sorted -LRB- d , key =d .'
bdflpronouncementrejected,'+ + on 17 june 2005 , the bdfl concurred with it being obsolete and + hereby rejected the pep .'
bdflpronouncementrejected,' + bdfl pronouncement + + this pep was rejected on 17 june 2005 with a note to python-dev .'
bdflpronouncementconditionallyaccept,'a c implementation and unit tests are at : http://www.python.org/sf/834422 + + bdfl pronouncement + ================== + + this pep has been conditionally accepted for py2 .4 .'
bdflprovisionallyaccepts,'Drop the last two  bullets and it's a deal.'

bdflpronouncement,'BDFL Pronouncements'
bdflpronouncement,'BDFL:  "def" it stays.'
bdflconsults,'No argument on either side is totally convincing, so I have consulted my language designer's intuition.'


%BDFL DELEGATE
bdfldelegateaccept,'Daniel submitted PEPs 425 and 427 to python-dev for acceptance, and I have formally accepted 427 as BDFL delegate'
cobdfldelegateaccept,'Im pleased to announce that Brett Cannon and Nick Coghlan (the co-BDFL-delegates) have accepted PEP 451 for inclusion in Python 3.4.'
bdfldelegateaccept,'I asked privately Guido van Rossum if I can be the BDFL-delegate for the PEP 471 and he agreed. I accept the latest version of the PEP: the PEP 471 and he agreed.'

% AUTHOR
authorrejectpep,'this pep is rejected by the author'
askingforreview,'I believe PEP 3144 is ready for your review.  When you get a chance,can you take a look/make a pronouncement?'
askingforreview,'PEP 435 is ready for final review.'
askingforreview,'PEP 391 is, I believe, ready for review.'
feedbackincorporated,' A lot of the feedback from the last few weeks of discussions has been incorporated. '
askforpronouncement,'Can I get a pronouncement? '
readyforpronouncement,'I don't think there are any outstanding tasks, so I'm happy that the PEP is ready for pronouncement.'

draft,'After a long editing process we've got PEP 484 (Type Hints) ready for your review.'

% NOT CLEAR, JUST STATE INFORMATION
pepaccept,'accepting pep 3144'
pepaccept,' I hereby declare PEP 435 as Accepted. '
pepaccept,'The PEP is accepted.'
pepaccept,'PEP 380 is pretty much approved.'
pepaccept,'PEP 376 has just been accepted. '
pepaccept,'PEP 3003: "Python Language Moratorium" has been accepted.'
pepaccept,'This PEP has been formally accepted for Python 3.3.
pepaccept,'I'm accepting the PEP. It's about as harmless as they come. Make it so.'
pepaccept,'Accept PEP 3144, and clean up some typos and text duplication'
pepaccept,'Since this is done I now approve both PEP 345 and PEP 386 (which is not to say that small editorial changes to the text couldn't be made). '
pepaccept,'Based on the current version of PEP 3144 and its reference implementation, I am formally accepting ipaddress into the standardlibrary.'
pepaccept,'I am pleased to announce that I am accepting PEP 484 (Type Hints).'
pepaccept,'Thanks! PEP 488 is now marked as accepted. '
pepaccepted,' I've approved your PEP. '

peprejected,'A similar PEP for Python 3000, PEP 3103 [2], was already rejected,'
peprejected,'the pep was eventually rejected and has the details of why it was rejected in the end . .'
peprejected,'pep 276 is now formally rejected'
peprejected,'PEP 382 was essentially rejected. '
peprejected,'pep 315 has been rejected .'
peprejected,'guido officially rejected pep-317 . .
peprejected,'pep 317 is submitted and rejected .''
peprejected,'* pep was submitted to be rejected .'
peprejected,'this pep is therefore rejected '
peprejected,'it has been rejected -LRB- as with all peps that have been pronounced upon , read the pep for the reasons why -RRB- , but the pep 's authors will nice enough to go ahead and finish the code for anyone who might want to use it anyway .'
peprejected,'modified files : pep-0000.txt pep-0239.txt pep-0240.txt pep-0000.txt pep-0239.txt pep-0240.txt pep-0000.txt pep-0239.txt pep-0240.txt pep-0000.txt pep-0239.txt pep-0240.txt log message : mark peps 239 and 240 as rejected .'
peprejected,'update pep 204 status to rejected .'
peprejected,'pep 348 has been rejected .'
peprejected,'PEP 382 was essentially rejected. '
peprejected,'pep 204 : range literals 14 juli 2000 , rejected . '
peprejected,'in light of the `` parade of peps '' message , i also have asked the pep administrator to move pep 276 to the withdrawn/rejected group .'
previousversionrejected,'the previous version of this pep was rejected .'
peprejected,'as a result , guido rejected the entire pep .'
pepreject,'I therefore reject it.'

% REASONS
bdfl,'bdfl made a decision'
bdfl,'bdfl decision'
bdflacceptfavourablefeedback,'Based on the favorable feedback here and on python-dev, Guido has accepted the PEP for Py2.4.'
bdflsatisfiedaccept,'I've reviewed PEP 345 and PEP 386 and am satisfied that after some small improvements they will be accepted. Most of the discussion has already taken place.''
bdflsatisfiedaccept,'I believe Peter has satisfactorily resolved the concerns previously raised with the proposed API, and if I missed anything... well, that's why we have alpha releases and the new provisional API status :)'
bdflsatisfiedaccept,'Having read the PEP I heartily approve. The PEP can be moved to Accepted state.'

pepgeneratednegative,'The PEP did however generate some negative responses when brought-up on comp.lang.python (it made some people's stomach churn).'
pepdrawbacks,'The PEP fails the tests of obviousness and necessity.  '
pepdrawbacks,'It also fails with respect to clarity and explicitness. '

acceptedconsensus,'Guido told me in private he's now accepting the PEP since there's consensus.'
whypepdelayed,'IIRC the issue with that PEP is that there is a stand-off between two authors of competing implementations, and I don't have enough understanding of the issues to be able to tell who's right. (Or maybe they're both right and they're just aiming at different audiences but I can't even tell that.)'
pepaddressedconcerns,'the latest version of the PEP [1] has addressed the key concerns that were raised:'
pepaddressedconcerns,'Peter's addressed all the substantive comments that were made regarding the draft API, and he's going to provide an update to the PEP shortly that should get it into a state where I can mark it as Approved.' '

rejectedreason-majority,'accordingly , the pep was + rejected due to the lack of an overwhelming majority for change .'
rejectedreason-enmity,'+ status + ====== + + the pep is self rejected by the author due to the unprecedented + level of enmity it generated from developers .'
rejectedreasonunanimity,'pep 259 rejected by user community with record unanimity . .'
rejectedreasonsyntax,'s you can see , pep 204 was rejected , mostly because of not-so-obvious syntax '
peprejectedsuperceeded,'pronouncement + + this pep is rejected in favor of pep 343 .'
rejectedreasonmeeting,'modified files : pep-0000.txt pep-0244.txt pep-0000.txt pep-0244.txt pep-0000.txt pep-0244.txt log message : after yesterday 's pythonlabs meeting , the status of pep 244 is changed after yesterday 's pythonlabs meeting , the status of pep 244 is changed to ` rejected ' . '
rejectedreason,'pep 315 has now beenexplicitly rejected : the official syntax for terminating a loop earlyis the existing break statement , thus any proposal for terminating acomprehension early must also be based on break if it is to beconsidered a serious suggestion .,'
rejectedreason,'i believe this is pretty much non-controversial ; it 's a much weaker version of pep 348 which was rightfully rejected for being too version of pep 348 which was rightfully rejected for being too radical .'
rejectedreason,'-LRB- return-if bar -RRB- -RRB- flow-control macros were suggested as part of pep 343 , but they were rejected by guido based on this rant : http://blogs.msdn.com/b/oldnewthing/archive/2005/01/06/347666.aspx .'
rejectedreasonTooMuchOpposition,'* raymond suggested updating ` pep 284 ` _ -LRB- `` integer for-loops '' -RRB- , but several people spoke up against it , including guido , so the pep was rejected . .'
bdflrejectedpep,'if i recall correctly he tried to propose this a year ago and it was rejected in favor of what was codified in pep438 at the time .'
bdflrejectedpepTooMuchImpact,that pep was rightly rejected as having too great an impact on `` normal '' code for something that is a comparatively exotic corner case .'
bdflrejectedpepTooMuchDisturbance,'however , pep 3140 was rejected on the basis of the > following statement of guido : > > `` let me just save everyone a lot of time and say that i 'm opposed to > this change , and that i believe that it would cause way too much > disturbance to be accepted this close to beta . '
bdflrejectedpepStrongOpposition,'raymond hettinger 's strong opposition to ` pep 351 ` _ , the freeze protocol , finally won out , and guido rejected the pep .
bdflrejectedpepToKeepFocus,'the author rejected that proposal to keep the current pep focused on ameliorating existing asymmetries rather than adding new behavior , but is not opposed to the notion in principle -LRB- assuming enums are used instead of strings -RRB- .''
bdflrejecteddisagreement, 'PEP 3144 wasn't pronounced upon because there were significant > disagreements about the design of the API proposed in the PEP. '
bdflrejectpollresults,'A quick poll during my keynote presentation at PyCon 2007 shows this proposal has no popular support. I therefore reject it.'

bdflrejectedpepToKeepFocus,'he author has rejected such proposals , yet again in order to keep the pep focused .'
bdflrejectedpepStrongOpposition,'raymond hettinger 's strong opposition to ` pep 351 ` _ , the freeze protocol , finally won out , and guido rejected the pep .'
rejectedreason,'* raymond suggested updating ` pep 284 ` _ -LRB- `` integer for-loops '' -RRB- , but several people spoke up against it , including guido , so the pep was rejected . .'
bdflrejectedpep,'guido agreed , so the pep was rejected . .'
bdflrejectedpep,'guido agreed again , and this pep too was rejected . .'
bdflrejectedpep,'no-one disagreed , and the pep was rejected . .'
peprejected,'was proposed , and the pep was rejected . .'
bdflrejectedpep,'many people , including guido , agreed , and the pep was rejected . .'

bdflpronouncement,'+ BDFL Pronouncements 1.  The new built-in function is ACCEPTED.  '


bdflasks,'Also, do you have a BDFL-delegate or do you want me to review it?'

pepfinished,'peps 205 , 226 , 227 , 229 , 235 , 236 moved to finished -LRB- although not all are marked final yet ; waiting for confirmation from pep owners -RRB- . .'

pepstatusfinalandrejected,'modified files : pep-0000.txt pep-0215.txt pep-0278.txt pep-0292.txt pep-0000.txt pep-0215.txt pep-0278.txt pep-0292.txt pep-0000.txt pep-0215.txt pep-0278.txt pep-0292.txt pep-0000.txt pep-0215.txt pep-0278.txt pep-0292.txt pep-0000.txt pep-0215.txt pep-0278.txt pep-0292.txt pep-0318.txt pep-0324.txt pep-0318.txt pep-0324.txt pep-0318.txt pep-0324.txt log message : jim jewett points out that peps 278 , 292 , 318 , and 324 can be marked as final , and that 215 can be marked as rejected . .'
pepstatusfinal,'modified files : pep-0000.txt pep-0252.txt pep-0253.txt pep-0000.txt pep-0252.txt pep-0253.txt pep-0000.txt pep-0252.txt pep-0253.txt pep-0000.txt pep-0252.txt pep-0253.txt log message : marking peps 252 and 253 as final , with gvr 's approval .'
pepstatusfinal,'peps 205 , 226 , 227 , 229 , 235 , 236 moved to finished -LRB- although not all are marked final yet ; waiting for confirmation from pep owners -RRB- . .'
pepstatusfinal,'pep 160 marked as final pep 160 marked as final .'
pepstatusfinal,'mark pep 200 as final now that 2.0 is out the door . .'
pepstatusfinal,'pep-0352 has a status of `` final '' .'
pepstatusfinal,'modified files : pep-0000.txt pep-0000.txt log message : moved 207 , 208 , 230 to final status . .'
pepstatusfinal,'pep 217 final .'
pepstatusfinal,'* mark the pep as final and implemented . . .'
pepstatusfinal,'pep 221 is marked as final . .'
pepstatusfinal,'pep 241 is marked final and moved to the finished section .'
pepstatusfinal,'modified files : pep-0000.txt pep-0000.txt log message : moved 207 , 208 , 230 to final status . '
pepstatusfinal,'pep 232 is final . .'
pepstatusfinal,'modified files : pep-0000.txt pep-0000.txt log message : pep 232 is final .'
pepstatusfinal,'mark pep 236 as final . .'
pepstatusfinal,'modified files : pep-0000.txt pep-0000.txt log message : pep 232 is final .'
pepstatusfinal,'modified files : pep-0000.txt pep-0000.txt log message : moved 207 , 208 , 230 to final status . .'
pepstatusfinal,'modified files : pep-0000.txt pep-0285.txt pep-0000.txt pep-0285.txt pep-0000.txt pep-0285.txt log message : pep 285 is final .'move pep 333 to final status . .
pepstatusfinal,'move pep 333 to final status . .'
pepstatusfinal,'on sun , sep 26 , 2010 at 1:50 pm , p.j. eby <pje at telecommunity.com> wrote : on sun , sep 26 , 2010 at 12:47 pm , barry warsaw <barry at python.org> wrote : > on sep 26 , 2010 , at 1:33 pm , p.j. eby wrote : > >> at 08:20 am 9/26/2010 -0700 , guido van rossum wrote : >> > i 'm happy approving final status for the >> > * original * pep 333 and i 'm happy to approve a new pep which includes >> > * original * pep 333 and i 'm happy to approve a new pep which includes >> > pje 's corrections .'
pepstatusfinal,'and move pep 333 to final status .'
pepstatusfinal,'i 'll not worry about it then ; pep 393 is final '
pepstatusfinal,'Mark PEP 488 as final'
pepstatusfinal,'I changed the status of the PEP 471 to Final even if os.walk() was not modified yet.'
pepstatusfinal,'Otherwise, I'll update the PEP and mark it as final.'

%CALL FOR VOTE, POLL, FEEDBACK
callforvote,'You can vote +1, 0 or -1.'
callforvote,'PEP 391 - Please Vote!'
callforvote,'everyone , please vote +1 or -1 .'
callforvote,'null from ncoghlan at gmail.com thu jan 14 12:46:19 2010 from : ncoghlan at gmail.com -LRB- nick coghlan -RRB- date : thu , 14 jan 2010 21:46:19 +1000 subject : -LSB- python-dev -RSB- pep 391 - please vote !'
callforvote,'please understand that i do n't have a lot of time to moderate the discussion ; i 'll just wait for the community to discuss the proposal and agree on some way to count votes , then count them .'
callforvote,'please read/comment/vote .'
callforvote,'* please vote * '
callforvote,'Feel free to vote if you have an opinion.'
callforvote,'Vote by email no later than Noon (EST) on Sunday, March 9, 2003.Use the following format:'
callforvote,'comments and votes , please ! .'
callforvote,'please participate in both votes if you have the time , but be sure to vote in the official one if you care about the outcome of pep-308 .'
callforvote,'please answer with +1 / +0 / -0 / -1 for each proposal : - ` p -LSB- q -RSB- ` joins path q to path p - ` p + q ` joins path q to path p - ` p / q ` joins path q to path p - ` p.join -LRB- q -RRB- ` joins path q to path p -LRB- you can include a rationale if you want , but do n't forget to vote :--RRB- -RRB- thank you antoine .'
callforvote,'So can you please indicate your vote for or against incorporating PEP 391 into Python?'
callforvote,'If you like one of the above syntaxes but prefer a different symbol than @ (such as |), please vote for that syntax any way.'
callforvote,'But as skeptical as I am (see what I added to FAQ 4.16), Ill take it for a vote on c.l.py and if it doesnt get a clear majority vote (and itll be up to the c.l.py folks to define what that is :-), itll remain rejected forever.'

complimentaryvote,'null from npetry@accesscomm.ca sun mar 9 18:45:13 2003 from : npetry@accesscomm.ca -LRB- norman petry -RRB- date : 09 mar 2003 12:45:13 -0600 subject : ballots : complementary pep308 ternary vote message-id : <mailman.1047245114.17718.clpa-moderators@python.org> .'

callforpoll,'I have a poll going on G+ to see what people think of the various proposed file name formats at. Feel free to vote if you have an opinion.'
callforpoll,'But yes, its a poll right now on the argparse website and if you feel strongly about it, please add your vote there (rather than here).'
callforpoll,' quick poll: could int, str, tuple etc. become type objects?'
callforpoll,'quick poll Guido asked if anyone would object violently to the builtin conversion functions becoming type objects on the descr-branch:'
callforpoll,'I would like to run an informal poll about it. Please answer with +1/+0/-0/-1 for each proposal:'
callforpoll,'There is a Poll running on the front of the PyPI page - you have to log in to see it/vote. '
callforpoll,'I have a poll going on G+ to see what people think of the various proposed file name formats at '
callforpoll,'Feel free to vote if you have an opinion.'
callforpoll,'But yes, it's a poll right now on the argparse website and if you feel strongly about it, please add your vote there (rather than here).'



complimentaryvotereminder,'this message is to remind you that tomorrow -LRB- saturday -RRB- is the last day to vote in the complementary , unofficial vote on adding a ternary operator to python -LRB- pep-308 -RRB- .'

% VOTING SPECIFIC INFORMATION
thinkingofinformalvote,'Id like to have an informal vote?'
summaryofvotes,'SUMMARY OF VOTES The PEP 308 vote is summarized at:'
approvalforvote,'You have my approval to hold a vote.'
voteheld,'+ following the discussion , a vote was held .'
voteresultsinterpret,'the pep 308 vote showed that at least 84 % of the python users wanted a the pep 308 vote showed that at least 84 % of the python users wanted a ternary .'


%what voting method
votingmethod, 'Does anybody have any preferences as to the voting method we should use?'

%
noopposition,'I haven't seen substantial opposition against the PEP -- in fact I can't recall any, and many people have explicitly posted in support of it. '

%CONSENSUS
consensus,'Yes, consensus clearly converged on the proposed syntax (the mention of "generators" in the construct's name was the part that I think prompted the desire for 'yield' -- had they been called "iterator expressions" I suspect nobody would have missed 'yield' even transiently:-).'
consensus,'Yes, consensus clearly converged on the proposed syntax ..'
consensus,' I hope to have a rough consensus ...'
consensus,'Guido told me in private he's now accepting the PEP since there's consensus.'
consensus,'it appears we are reaching some consensus.'
consensus,'The consensus appears to be that there is no need to add a new CSPRNG to...'
consensus,'consensus has been reached'
consensus,'consensus was quickly reached'
consensus,'I think we've reached a consensus on those two PEPs.'
consensus,'As you said, consensus has been reached, so just Guido's BDFL stamp of approval is all I can think of.'
consensus,'no-one disagreed , and the pep was rejected.'
consensus,'So what *is* the distutils-sig consensus?  The consensus is to have one and only one way to install distributions in Python, and a way to retrieve information on installed distributions, and their files. '
noconsensus,'The thread died off before a consensus was reached,unfortunately.'
noconsensus,'Beyond that there seems to be no clear consensus where to place this...'
noconsensus,'community has been unable to reach a consensus.'
noconsensus,'unlikely to reach consensus'
noconsensus,'There was no consensus on which one we should use. '
noconsensus,'We well never reach consensus. 
noconsensus,'no consensus was reached'
noconsensus,'community had not yet reached a consensus.'
noconsensus,'consensus has never been reached'
noconsensus,'While the majority of Python users deemed this to be a nice-to-have feature, the community was unable to reach a consensus on whether nine should be represented as IX, the modern form, or VIIII, the classic form.  '
noconsensus,'naturally , not everything could go in because some minor mostly preference-based issues did not reach a consensus .'
noconsensus,'much like the last time this issue was brought up , `` the discussion fizzled out after having failed to reach a consensus on an obviously right way to go about it '' -LRB- greg ewing 's quite appropriate wording -RRB- .'
noconsensus,'As I expected, we didn't find a full consensus on the final PEP 386schema on Distutils-SIG'
noconsensus,'pep-accepted,Naturally, not everything could go in because some minor (mostly preference-based) issues did not reach a consensus. '
noconsensus,'While the majority of Python users deem this to be a nice-to-have feature, the community has been unable to reach a consensus on the proper syntax after more than two years of intensive debate (the PEP was introduced in early April 2003).'

consensus,'I've tried to reflect the concensus which seems to be emerging on the python-dev list, though I suspect I've done a poor job of that.  '
farandwidediscussion,'The discussions there and on comp.lang.python have ranged far and wide and thus resist summary in a finite amount of time.  '
consensusemerged,'The consensus that emerged on comp.lang.python was the proposed J2 syntax (the "J2" was how it was referenced on the PythonDecorators wiki'

%stalled
pepstalled,'the stalled PEP 3144 process.'
needsconsensus,'really needs consensus from domain experts '

%two camps
twocamps,'There seems to be two basic camps:  those that think an enum should be valueless, ..and those for whom the integer is an integral part of the enumeration, whether for sorting, comparing, selecting an index, or whatever. '

%Roles
pepczar,'Approved. Nick is PEP czar for PEP 3144. '
bdflaskssomeonetobedelegate,'So, Alex, do you want to approve this PEP?'

%revisions
revisions,'PEP 501 has been through a long series of revisions, involving ..'

%SUPERCEDED
pepsuperceded,'This PEP is rejected by the author. It has been superseded by PEP 287.'
pepsuperceded,'PEP 433 was rejected, replaced with the PEP 446.'
pepsuperceded,'+ pronouncement + + this pep is rejected in favor of pep 343 .'
pepsuperceded,'+ if this pep is approved , the following peps will be rejected due + to overlap : + + - pep 288 , generators attributes and exceptions .'
pepsuperceded,'sorry , that should have been pep 340 , which was rejected in favor of 343 .'

%PEP status
pepacceptedafterdiscussion,'After months of intensive discussion (more than a 1000 emails in dozens of threads spread over two mailing lists, and a couple of hundred additional private emails), PEP 435 has been accepted '
peprevised,'After unprecedented community response (very food arguments were made both pro and con) this PEP has been revised with the help of Raymond Hettinger.'
peprevised,'We're happy to present the revised PEP 435, collecting valuable feedback from python-ideas discussions as well as in-person discussions and decisions made during the latest PyCon language summit. '
authoragreestomodify,'I'll make an implementation with these changes this weekend.'
%other
offlineDiscussion,'We had a short off-list conversation with Guido on PEP 376'
decisionoveriddenwithoutconsultation,'I made a conscious decision to do that, and I'm a bit alarmed at this decision being overridden at the last moment with no debate.'
important,'I understand that @allow_import_stop represents a compromise, an attempt at calming the waves that PEP 479 has caused. But I still want to push back pretty hard on this idea.'