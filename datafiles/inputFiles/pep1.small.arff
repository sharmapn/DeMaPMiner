@relation pep_test

@attribute Labelsclass {proposal,callforfeedback, bdflaccept,bdflofflineaccept,bdfldecision,bdflrejected, bdfldecreereject, bdflwithdrawn, bdflpronouncement,bdflpronouncementaccept,bdflpronouncementpeprejected,bdflpronouncementrejected,bdflpronouncementconditionallyaccept,bdflprovisionallyaccepts,bdflconsults,bdfldelegateaccept,cobdfldelegateaccept,authorrejectpep, askingforreview, feedbackincorporated,askforpronouncement,readyforpronouncement,pepaccept,pepaccepted,pepreject,peprejected,previousversionrejected,pepfinished, pepstatusfinal,pepstatusfinalandrejected,callforvote,callforpoll,complimentaryvotereminder, thinkingofinformalvote,summaryofvotes,approvalforvote,voteheld,voteresultsinterpret,votingmethod,noopposition, complimentaryvote,consensus,noconsensus,farandwidediscussion,consensusemerged,pepstalled,needsconsensus,twocamps,pepczar,bdflaskssomeonetobedelegate,revisions,pepsuperceded,pepacceptedafterdiscussion,peprevised,authoragreestomodify,offlineDiscussion,decisionoveriddenwithoutconsultation,important}
@attribute text String

@data
%proposal
proposal,'I would like to purpose ..'
proposal,' This PEP proposes adding Roman numerals as a literal type .'
first-draft,'This is the first draft of a PEP describing new syntax for applying function modifiers (e.g. classmethod, staticmethod, etc). '
author-will-revise,'I have already received a few comments and will revise the document soon.'
author-taken-comments-into-account,'I have received many comments on this proposal already and have taken them into account in this proposal. '
new-pep-was-checked-in,'A new PEP was checked in:'
no-consensus,'I'm afraid that absolutely zero consensus is emerging :( I\'ve withdrawn myself entirely from the discussions as they\'ve proven completely useless.'
pep-discussion,'After submitting it to BDFL for approval, more work was needed and the discussion of PEP 318 on python-dev increased rapidly.'
more-work-needed-discussion,'After submitting it to BDFL for approval, more work was needed and the discussion of PEP 318 on python-dev increased rapidly.'
community-thinks-bdfl-mistake,'I don\'t know about consensus, but there are a considerable number of people who think you're mistaken (it\'s gotten pretty heated over on c.l.py at times).'
bdfl-asks-if-anyone-trying,' Is anybody seriously trying to come up with a single alternative decorator proposal that most folks "out there" can support, to be presented to me (with implementation, please!) in time for 2.4b1? '
poll, 'There was a poll linked from the decorators wiki, that now says (consider the poll now closed). '
poll-results,'If it were a democracy, the standings are: '
community-preference,'I think it\'s important to understand that we\'re now down to aesthetic choices about elegance, readability, ease of use, etc. For those reasons, we\'ll never agree because everyone has different tastes. '
support-bdfl,'Python represents Guido's aesthetic in language design, and we all agree that he gets most such decisions right, so I trust him on this one too and I was /not/ a pie-decorator fan originally. '
bdfls-version-accepted,'rejected http://bugs.python.org/issue926860 guidos veersion accepted'
bdfls-version-accepted,'guidos veersion accepted'
pep-submitted-rejected,'PEP 317 is submitted and rejected.'
ask-bdfl-pronouncement,'It\'s probably time to ask the BDFL for a pronouncement on the PEP.'
bdfl-cant-pronounce,'I\'ve been asked by a few folks to pronounce on the PEP, but as it stands, the PEP doesn\'t adequately summarize the discussion, so I can\'t pronounce.'
bdfl-asks-summary-going-in-circles,'Instead of arguing in circles, can someone (or a small group) rewrite the PEP to contain a summary of the arguments for and against various forms?'
change-primary-pep-author,'Kevin Smith, the original PEP author, doesn\'t frequent python-dev much, and has indicated that he\'d be happy to step down as primary author. Who would like to build on Kevin\'s work?'
discussion-may-never-end,'PEP 318 and the discussion that will never end'
waiting-for-bdfl-pronouncement,'But again, I think all the issues, opinions, etc. are covered in the PEP, so it doesn't make much sense to continue to debate the issue. '
discussion-came-down-to,'What most of the discussion came down to was syntax and the order of application.  '
agreed-to-rewrite-pep,'In the end it was agreed the PEP needed to be thoroughly rewritten which has not occurred yet.'
pep-maybe-a-bdfl-decision,'It will probably be a BDFL pronouncement.'
strong-preference,'I think there was a very strong preference for the opposite order to the one you've given here'
thinking-that-consensus,'I think the consensus was d2'
vote-goahead,' You have my approval to hold a vote'
bdfl-doesnt-like,'But while you're at it, please add to the PEP that I don't like the idea of class decorators.  '
author-changes-pep,'I\'m working on changes to PEP 318 which incorporate class decorators.'
bdfl-skeptacal,'Guido expressed skepticism about the concept, but various people have made some `strong arguments'
pep-discussion-direction,'Personally, I believe discussion over PEP 318 has wandered from an implementation and practical purity, into a syntactical nightmare.'
vote,'I vote for '
discussion-for-long-time,'We\'ve been discussing this off and on for OVER A YEAR!'
few-alternatives-proposed,'For syntax options which use a list-like syntax to specify the+ decorators a few alternatives have been proposed: '
asks-for-pep-summary,'If someone could step up and summarize some of the new material (or better yet, update the file directly) it would be much appreciated.'
shouting-accusations,'Even shouting and mutual accusations have been reported'
proposal,'My humble hope is that this document helps to improve the quality of the ongoing discussion.'
back-to-sqaure-one,'A few regularly scheduled syntactic duels later, we are still where we started: '



%call for feedback
callforfeedback,'Please read/comment/vote'
callforfeedback,'Comments?'
callforfeedback,'Your review and comments are invited for PEP 279:'
callforfeedback,'So, I guess as far as I\'m concerned, this is ready to go. Feedback welcome:'
callforfeedback,'please review the new more final draft of the pep and send out suggestions and feedback .'
callforfeedback,'Please take a look and express your approval or disapproval (+1, +0, -0,-1, or whatever). '
callforfeedback,'Please send suggestions for editorial improvements to peps at python.org. '
callforfeedback,'Feedback (also about misrepresentation of alternatives I don\'t favor) is most welcome, either to me directly or as a followup to this post.'

% BDFL 
bdflaccept,'This PEP was accepted by the BDFL on November 22.'
bdflaccept,'PEP 201 has been accepted by the BDFL'
bdflaccept,'This proposal has been accepted by the BDFL'
bdflaccept,'Both PEP 201 Lockstep Iteration and SF patch #101030 have been accepted by the BDFL.'
bdflaccept,'PEP 214 Extended print Statement has been accepted by the BDFL.'
bdflaccept,'Awesome, that\'s what I was hoping. Accepted! Congrats and thank you very much for writing the PEP and guiding the discussion.'
bdflaccept,'PEP 488 is now marked as accepted.'
bdflaccept,'Since this is done I now approve both PEP 345 and PEP 386 (which is not to say that small editorial changes to the text couldn\'t be made). '
bdflofflineaccept,'Off-list he\'s told me he\'s happy with the PEP. I have to make some changes to typing.py to satisfy him;'
bdflofflineaccept,'Off-list he\'s promised he\'ll approve the PEP provisionally, and the window for beta 1 is closing'
bdfldecision,'So enumerate() it is.'
bdflrejected,'guido rejected the pep '
bdflrejected,'guido agreed , so the pep was rejected.'
bdflrejected,'guido agreed again , and this pep too was rejected'
bdflrejected,'+ + on 17 june 2005 , the bdfl concurred with it being obsolete and + hereby rejected the pep .'
bdflrejected,'was proposed , and the pep was rejected.'
bdflrejected,'many people , including guido , agreed , and the pep was rejected '
bdfldecreereject,'pep 224 is rejected by bdfl decree'
bdfldecreereject,'PEP 295 is rejected by BDFL decree.'
bdflwithdrawn,'but pep 340 is already withdrawn by the bdfl .'

%bdfl pronouncement
bdflpronouncement,'BDFL Pronouncements'
bdflpronouncement,'BDFL:  \"def\" it stays.'
bdflpronouncementaccept,'PEP 214 and 221 are accepted, as per recent BDFL pronouncements.'
bdflpronouncementpeprejected,'+ bdfl pronouncement this pep is rejected .'
bdflpronouncementpeprejected,'pep 245 was rejected by bdfl pronouncement .'
bdflpronouncementpeprejected,'+ bdfl pronouncement + + this pep is rejected .'
bdflpronouncementrejected,'+ bdfl pronouncement + + this pep is rejected because the need for it has been largely + fulfilled by py2 .4 '
bdflpronouncementrejected,'+ + on 17 june 2005 , the bdfl concurred with it being obsolete and + hereby rejected the pep .'
bdflpronouncementrejected,' + bdfl pronouncement + + this pep was rejected on 17 june 2005 with a note to python-dev .'
bdflpronouncementconditionallyaccept,'a c implementation and unit tests are at : http://www.python.org/sf/834422 + + bdfl pronouncement + ================== + + this pep has been conditionally accepted for py2 .4 .'
bdflprovisionallyaccepts,'Drop the last two  bullets and it\'s a deal.'
bdflconsults,'No argument on either side is totally convincing, so I have consulted my language designer\'s intuition.'

%BDFL DELEGATE
bdfldelegateaccept,'Daniel submitted PEPs 425 and 427 to python-dev for acceptance, and I have formally accepted 427 as BDFL delegate'
bdfldelegateaccept,'I asked privately Guido van Rossum if I can be the BDFL-delegate for the PEP 471 and he agreed. I accept the latest version of the PEP: the PEP 471 and he agreed.'
cobdfldelegateaccept,'Im pleased to announce that Brett Cannon and Nick Coghlan (the co-BDFL-delegates) have accepted PEP 451 for inclusion in Python 3.4.'

% AUTHOR
authorrejectpep,'this pep is rejected by the author'
askingforreview,'I believe PEP 3144 is ready for your review.  When you get a chance,can you take a look/make a pronouncement?'
askingforreview,'PEP 435 is ready for final review.'
askingforreview,'PEP 391 is, I believe, ready for review.'
feedbackincorporated,' A lot of the feedback from the last few weeks of discussions has been incorporated. '
askforpronouncement,'Can I get a pronouncement? '
readyforpronouncement,'I don\'t think there are any outstanding tasks, so I\'m happy that the PEP is ready for pronouncement.'

% NOT CLEAR JUST STATE INFORMATION
pepaccept,'accepting pep 3144'
pepaccept,' I hereby declare PEP 435 as Accepted. '
pepaccept,'The PEP is accepted.'
pepaccept,'PEP 380 is pretty much approved.'
pepaccept,'PEP 376 has just been accepted. '
pepaccept,'PEP 3003: \"Python Language Moratorium\" has been accepted.'
pepaccept,'This PEP has been formally accepted for Python 3.3.'
pepaccept,'I\'m accepting the PEP. It\'s about as harmless as they come. Make it so.'
pepaccept,'Accept PEP 3144, and clean up some typos and text duplication'
pepaccept,'Since this is done I now approve both PEP 345 and PEP 386 (which is not to say that small editorial changes to the text couldn\'t be made). '
pepaccept,'Based on the current version of PEP 3144 and its reference implementation, I am formally accepting ipaddress into the standardlibrary.'
pepaccept,'I am pleased to announce that I am accepting PEP 484 (Type Hints).'
pepaccept,'Thanks! PEP 488 is now marked as accepted. '
pepaccepted,' I\'ve approved your PEP. '

pepreject,'I therefore reject it.'
peprejected,'A similar PEP for Python 3000, PEP 3103 [2], was already rejected,'
peprejected,'the pep was eventually rejected and has the details of why it was rejected in the end . .'
peprejected,'pep 276 is now formally rejected'
peprejected,'PEP 382 was essentially rejected. '
peprejected,'pep 315 has been rejected .'
peprejected,'guido officially rejected pep-317..'
peprejected,'pep 317 is submitted and rejected .''
peprejected,'* pep was submitted to be rejected .'
peprejected,'this pep is therefore rejected '
peprejected,'it has been rejected -LRB- as with all peps that have been pronounced upon , read the pep for the reasons why -RRB- , but the pep \'s authors will nice enough to go ahead and finish the code for anyone who might want to use it anyway .'
peprejected,'modified files : pep-0000.txt pep-0239.txt pep-0240.txt pep-0000.txt pep-0239.txt pep-0240.txt pep-0000.txt pep-0239.txt pep-0240.txt pep-0000.txt pep-0239.txt pep-0240.txt log message : mark peps 239 and 240 as rejected .'
peprejected,'update pep 204 status to rejected .'
peprejected,'pep 348 has been rejected .'
peprejected,'PEP 382 was essentially rejected. '
peprejected,'pep 204 : range literals 14 juli 2000 , rejected . '
peprejected,'in light of the \`\` parade of peps \'\' message , i also have asked the pep administrator to move pep 276 to the withdrawn/rejected group .'
peprejected,'as a result , guido rejected the entire pep .'
previousversionrejected,'the previous version of this pep was rejected .'

pepfinished,'peps 205 , 226 , 227 , 229 , 235 , 236 moved to finished -LRB- although not all are marked final yet ; waiting for confirmation from pep owners -RRB- . .'

pepstatusfinal,'modified files : pep-0000.txt pep-0252.txt pep-0253.txt pep-0000.txt pep-0252.txt pep-0253.txt pep-0000.txt pep-0252.txt pep-0253.txt pep-0000.txt pep-0252.txt pep-0253.txt log message : marking peps 252 and 253 as final , with gvr \'s approval .'
pepstatusfinal,'peps 205 , 226 , 227 , 229 , 235 , 236 moved to finished -LRB- although not all are marked final yet ; waiting for confirmation from pep owners -RRB- . .'
pepstatusfinal,'pep 160 marked as final pep 160 marked as final .'
pepstatusfinal,'mark pep 200 as final now that 2.0 is out the door . .'
pepstatusfinal,'pep-0352 has a status of \`\` final \'\' .'
pepstatusfinal,'modified files : pep-0000.txt pep-0000.txt log message : moved 207 , 208 , 230 to final status . .'
pepstatusfinal,'pep 217 final .'
pepstatusfinal,'* mark the pep as final and implemented . . .'
pepstatusfinal,'pep 221 is marked as final . .'
pepstatusfinal,'pep 241 is marked final and moved to the finished section .'
pepstatusfinal,'modified files : pep-0000.txt pep-0000.txt log message : moved 207 , 208 , 230 to final status . '
pepstatusfinal,'pep 232 is final . .'
pepstatusfinal,'modified files : pep-0000.txt pep-0000.txt log message : pep 232 is final .'
pepstatusfinal,'mark pep 236 as final . .'
pepstatusfinal,'modified files : pep-0000.txt pep-0000.txt log message : pep 232 is final .'
pepstatusfinal,'modified files : pep-0000.txt pep-0000.txt log message : moved 207 , 208 , 230 to final status . .'
pepstatusfinal,'modified files : pep-0000.txt pep-0285.txt pep-0000.txt pep-0285.txt pep-0000.txt pep-0285.txt log message : pep 285 is final .\'move pep 333 to final status . .
pepstatusfinal,'move pep 333 to final status . .'
pepstatusfinal,'on sun , sep 26 , 2010 at 1:50 pm , p.j. eby <pje at telecommunity.com> wrote : on sun , sep 26 , 2010 at 12:47 pm , barry warsaw <barry at python.org> wrote : > on sep 26 , 2010 , at 1:33 pm , p.j. eby wrote : > >> at 08:20 am 9/26/2010 -0700 , guido van rossum wrote : >> > i \'m happy approving final status for the >> > * original * pep 333 and i \'m happy to approve a new pep which includes >> > * original * pep 333 and i \'m happy to approve a new pep which includes >> > pje \'s corrections .'
pepstatusfinal,'and move pep 333 to final status .'
pepstatusfinal,'i \'ll not worry about it then ; pep 393 is final '
pepstatusfinal,'Mark PEP 488 as final'
pepstatusfinal,'I changed the status of the PEP 471 to Final even if os.walk() was not modified yet.'
pepstatusfinal,'Otherwise, I\'ll update the PEP and mark it as final.'
pepstatusfinalandrejected,'modified files : pep-0000.txt pep-0215.txt pep-0278.txt pep-0292.txt pep-0000.txt pep-0215.txt pep-0278.txt pep-0292.txt pep-0000.txt pep-0215.txt pep-0278.txt pep-0292.txt pep-0000.txt pep-0215.txt pep-0278.txt pep-0292.txt pep-0000.txt pep-0215.txt pep-0278.txt pep-0292.txt pep-0318.txt pep-0324.txt pep-0318.txt pep-0324.txt pep-0318.txt pep-0324.txt log message : jim jewett points out that peps 278 , 292 , 318 , and 324 can be marked as final , and that 215 can be marked as rejected . .'

%CALL FOR VOTE, POLL, FEEDBACK
callforvote,'You can vote +1, 0 or -1.'
callforvote,'PEP 391 - Please Vote!'
callforvote,'everyone , please vote +1 or -1 .'
callforvote,'null from ncoghlan at gmail.com thu jan 14 12:46:19 2010 from : ncoghlan at gmail.com -LRB- nick coghlan -RRB- date : thu , 14 jan 2010 21:46:19 +1000 subject : -LSB- python-dev -RSB- pep 391 - please vote !'
callforvote,'please understand that i do n\'t have a lot of time to moderate the discussion ; i \'ll just wait for the community to discuss the proposal and agree on some way to count votes , then count them .'
callforvote,'please read/comment/vote .'
callforvote,'* please vote * '
callforvote,'Feel free to vote if you have an opinion.'
callforvote,'Vote by email no later than Noon (EST) on Sunday, March 9, 2003.Use the following format:'
callforvote,'comments and votes , please ! .'
callforvote,'please participate in both votes if you have the time , but be sure to vote in the official one if you care about the outcome of pep-308 .'
callforvote,'please answer with +1 / +0 / -0 / -1 for each proposal .'
callforvote,'So can you please indicate your vote for or against incorporating PEP 391 into Python?'
callforvote,'If you like one of the above syntaxes but prefer a different symbol than @ (such as |), please vote for that syntax any way.'
callforvote,'But as skeptical as I am (see what I added to FAQ 4.16), I\'ll take it for a vote on c.l.py and if it doesnt get a clear majority vote (and itll be up to the c.l.py folks to define what that is :-), itll remain rejected forever.'

complimentaryvote,'null from npetry@accesscomm.ca sun mar 9 18:45:13 2003 from : npetry@accesscomm.ca -LRB- norman petry -RRB- date : 09 mar 2003 12:45:13 -0600 subject : ballots : complementary pep308 ternary vote message-id : <mailman.1047245114.17718.clpa-moderators@python.org> .'

callforpoll,'I have a poll going on G+ to see what people think of the various proposed file name formats at. Feel free to vote if you have an opinion.'
callforpoll,'But yes, its a poll right now on the argparse website and if you feel strongly about it, please add your vote there (rather than here).'
callforpoll,' quick poll: could int, str, tuple etc. become type objects?'
callforpoll,'quick poll Guido asked if anyone would object violently to the builtin conversion functions becoming type objects on the descr-branch:'
callforpoll,'I would like to run an informal poll about it. Please answer with +1/+0/-0/-1 for each proposal:'
callforpoll,'There is a Poll running on the front of the PyPI page - you have to log in to see it/vote. '
callforpoll,'I have a poll going on G+ to see what people think of the various proposed file name formats at '
callforpoll,'Feel free to vote if you have an opinion.'
callforpoll,'But yes, it\'s a poll right now on the argparse website and if you feel strongly about it, please add your vote there (rather than here).'

complimentaryvotereminder,'this message is to remind you that tomorrow -LRB- saturday -RRB- is the last day to vote in the complementary , unofficial vote on adding a ternary operator to python -LRB- pep-308 -RRB- .'

% VOTING SPECIFIC INFORMATION
thinkingofinformalvote,'I\'d like to have an informal vote?'
summaryofvotes,'SUMMARY OF VOTES The PEP 308 vote is summarized at:'
approvalforvote,'You have my approval to hold a vote.'
voteheld,'+ following the discussion , a vote was held .'
voteresultsinterpret,'the pep 308 vote showed that at least 84 % of the python users wanted a the pep 308 vote showed that at least 84 % of the python users wanted a ternary .'
%what voting method
votingmethod, 'Does anybody have any preferences as to the voting method we should use?'
%
noopposition,'I haven\'t seen substantial opposition against the PEP -- in fact I can\'t recall any, and many people have explicitly posted in support of it. '

%CONSENSUS
consensus,'Yes, consensus clearly converged on the proposed syntax (the mention of "generators" in the construct\'s name was the part that I think prompted the desire for \'yield\' -- had they been called "iterator expressions" I suspect nobody would have missed \'yield\' even transiently:-).'
consensus,'Yes, consensus clearly converged on the proposed syntax ..'
consensus,' I hope to have a rough consensus ...'
consensus,'Guido told me in private he\'s now accepting the PEP since there\'s consensus.'
consensus,'it appears we are reaching some consensus.'
consensus,'The consensus appears to be that there is no need to add a new CSPRNG to...'
consensus,'consensus has been reached'
consensus,'consensus was quickly reached'
consensus,'I think we\'ve reached a consensus on those two PEPs.'
consensus,'As you said, consensus has been reached, so just Guido\'s BDFL stamp of approval is all I can think of.'
consensus,'no-one disagreed , and the pep was rejected.'
consensus,'So what *is* the distutils-sig consensus?  The consensus is to have one and only one way to install distributions in Python, and a way to retrieve information on installed distributions, and their files. '
consensus,'I\'ve tried to reflect the concensus which seems to be emerging on the python-dev list, though I suspect I\'ve done a poor job of that.  '
noconsensus,'The thread died off before a consensus was reached,unfortunately.'
noconsensus,'Beyond that there seems to be no clear consensus where to place this...'
noconsensus,'community has been unable to reach a consensus.'
noconsensus,'unlikely to reach consensus'
noconsensus,'There was no consensus on which one we should use. '
noconsensus,'We well never reach consensus.'
noconsensus,'no consensus was reached'
noconsensus,'community had not yet reached a consensus.'
noconsensus,'consensus has never been reached'
noconsensus,'While the majority of Python users deemed this to be a nice-to-have feature, the community was unable to reach a consensus on whether nine should be represented as IX, the modern form, or VIIII, the classic form.  '
noconsensus,'naturally , not everything could go in because some minor mostly preference-based issues did not reach a consensus .'
noconsensus,'much like the last time this issue was brought up , \`\` the discussion fizzled out after having failed to reach a consensus on an obviously right way to go about it \'\' -LRB- greg ewing \'s quite appropriate wording -RRB- .'
noconsensus,'As I expected, we didn\'t find a full consensus on the final PEP 386schema on Distutils-SIG'
noconsensus,'pep-accepted,Naturally, not everything could go in because some minor (mostly preference-based) issues did not reach a consensus. '
noconsensus,'While the majority of Python users deem this to be a nice-to-have feature, the community has been unable to reach a consensus on the proper syntax after more than two years of intensive debate (the PEP was introduced in early April 2003).'

farandwidediscussion,'The discussions there and on comp.lang.python have ranged far and wide and thus resist summary in a finite amount of time.  '
consensusemerged,'The consensus that emerged on comp.lang.python was the proposed J2 syntax (the "J2" was how it was referenced on the PythonDecorators wiki'

%stalled
pepstalled,'the stalled PEP 3144 process.'
needsconsensus,'really needs consensus from domain experts '

%two camps
twocamps,'There seems to be two basic camps:  those that think an enum should be valueless, ..and those for whom the integer is an integral part of the enumeration, whether for sorting, comparing, selecting an index, or whatever. '

%Roles
pepczar,'Approved. Nick is PEP czar for PEP 3144. '
bdflaskssomeonetobedelegate,'So, Alex, do you want to approve this PEP?'

%revisions
revisions,'PEP 501 has been through a long series of revisions, involving ..'

%SUPERCEDED
pepsuperceded,'This PEP is rejected by the author. It has been superseded by PEP 287.'
pepsuperceded,'PEP 433 was rejected, replaced with the PEP 446.'
pepsuperceded,'+ pronouncement + + this pep is rejected in favor of pep 343 .'
pepsuperceded,'+ if this pep is approved , the following peps will be rejected due + to overlap : + + - pep 288 , generators attributes and exceptions .'
pepsuperceded,'sorry , that should have been pep 340 , which was rejected in favor of 343 .'

%PEP status
pepacceptedafterdiscussion,'After months of intensive discussion (more than a 1000 emails in dozens of threads spread over two mailing lists, and a couple of hundred additional private emails), PEP 435 has been accepted '
peprevised,'After unprecedented community response (very food arguments were made both pro and con) this PEP has been revised with the help of Raymond Hettinger.'
peprevised,'We\'re happy to present the revised PEP 435, collecting valuable feedback from python-ideas discussions as well as in-person discussions and decisions made during the latest PyCon language summit. '
authoragreestomodify,'I\'ll make an implementation with these changes this weekend.'
%other
offlineDiscussion,'We had a short off-list conversation with Guido on PEP 376'
decisionoveriddenwithoutconsultation,'I made a conscious decision to do that, and I\'m a bit alarmed at this decision being overridden at the last moment with no debate.'
important,'I understand that @allow_import_stop represents a compromise, an attempt at calming the waves that PEP 479 has caused. But I still want to push back pretty hard on this idea.'